@using Microsoft.AspNetCore.Identity
@using EssentialOilsCapstone.Areas.Identity.Data

@inject SignInManager<EssentialOilsCapstoneUser> SignInManager
@inject UserManager<EssentialOilsCapstoneUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="" asp-controller="User" asp-action="Index">My Medicine Cabinet</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="User" asp-action="Index" asp-route-returnUrl="@Url.Action("Index", "User", new { area = "" })">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
            </form>
        </li>
    }
    else
    {   
        <li class="nav-item">
            <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">My Medicine Cabinet</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
